@page "/Employees/Create"

@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Identity
@using NikePro.Interfaces.ProductInterfaces
@using NikePro.Interfaces
@using NikePro.Data
@using Microsoft.AspNetCore.Components.QuickGrid
@inject IEmployeeService EmployeeService
@rendermode InteractiveServer
@inject NavigationManager Navigation
@inject ApplicationDbContext dbContext

<PageTitle>Добавить сотрудника</PageTitle>

<h1>Добавить сотрудника</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="User" OnValidSubmit="AddEmployee" FormName="Create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="userrname" class="form-label">Имя сотрудника:</label>
                <InputText id="username" @bind-Value="User.Name" class="form-control" />
                <ValidationMessage For="() => User.Name" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="workersurname" class="form-label">Фамилия сотрудника:</label>
                <InputText id="workersurname" @bind-Value="User.Surname" class="form-control" />
                <ValidationMessage For="() => User.Surname" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="workerpatronymic" class="form-label">Отчество сотрудника:</label>
                <InputText id="workerpatronymic" @bind-Value="User.Patronymic" class="form-control" />
                <ValidationMessage For="() => User.Patronymic" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="birthday" class="form-label">Дата рождения:</label>
                <InputDate id="birthday" @bind-Value="User.BirthdayDate" class="form-control" />
                <ValidationMessage For="() => User.BirthdayDate" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="workerblock" class="form-label">Телефон:</label>
                <InputText id="workerblock" @bind-Value="User.Phone" class="form-control" />
                <ValidationMessage For="() => User.Phone" class="text-danger" />
            </div>
            <button type="submit" class="btn btn-primary">Добавить</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/Workers">Back to List</a>
</div>
@code {
    [SupplyParameterFromForm]
    public ApplicationUser User { get; set; } = new();

    public async Task AddEmployee()
    {
        await EmployeeService.AddEmployee(User);
        Navigation.NavigateTo("/Employees");
    }
}
